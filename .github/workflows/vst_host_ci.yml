---

name: Build Vst Host

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  BUILD_TYPE: Release

jobs:
  build_windows_config:

    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake "${{github.workspace}}\VstHost_VisualC++" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_GMOCK=0
          cd ..

      - name: Build C++ Code
        run: |
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 8

      - name: Run C++ Unit Tests
        run: |
          cd ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}
          ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/ApiUnitTests.exe
          ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/OfflineToolsUnitTests.exe

      - name: Run Python Unit Tests
        run: |
          cp ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/adelay.vst3 ${{github.workspace}}\VstHost_Python\UnitTests\
          cp ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/AudioHostLib.dll ${{github.workspace}}\VstHost_Python\UnitTests\
          python -m unittest discover ${{github.workspace}}/VstHost_Python/UnitTests "test_*.py"

      - name: Clean Up After Build
        run: |
          rm ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/ApiUnitTests.exe
          rm ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/OfflineToolsUnitTests.exe
          rm ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/adelay.vst3
          rm ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/VstHost.log
          rm -r -fo ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/data

      #- name: Archive Build Artifacts
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: windows_x64
      #    path: ${{ github.workspace }}/build/bin/${{env.BUILD_TYPE}}
      
  build_linux_configuration:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      
      
      - name: Configure CMake
        run: |
          mkdir build
          cd build
          cmake "${{github.workspace}}\VstHost_VisualC++" -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_GMOCK=0
          cd ..

      - name: Build C++ Code
        run: |
          cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} -j 8

      - name: Run C++ Unit Tests
        run: |
          cd ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}
          ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/ApiUnitTests
          ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/OfflineToolsUnitTests

      - name: Run Python Unit Tests
        run: |
          cp ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/adelay.vst3 ${{github.workspace}}/VstHost_Python/UnitTests/
          cp ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/AudioHostLib.dll ${{github.workspace}}/VstHost_Python/UnitTests/
          python -m unittest discover ${{github.workspace}}/VstHost_Python/UnitTests "test_*.py"

      - name: Clean Up After Build
        run: |
          rm ./${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/ApiUnitTests
          rm ./${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/OfflineToolsUnitTests
          rm -fr ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/adelay.vst3
          rm ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/VstHost.log
          rm -r -fo ${{github.workspace}}/build/bin/${{env.BUILD_TYPE}}/data

      #- name: Archive Build Artifacts
      #  uses: actions/upload-artifact@v1
      #  with:
      #    name: linux_x64
      #    path: ${{ github.workspace }}/build/bin/${{env.BUILD_TYPE}}
